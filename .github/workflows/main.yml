name: Build and Deploy Maven Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze-code:
    name: Analyze Code Style
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run static code analysis
        run: mvn checkstyle:check

  build:
    name: Build JAR
    runs-on: ubuntu-latest
    needs: analyze-code

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/*.jar

#  deploy:
#    name: Deploy JAR
#    runs-on: ubuntu-latest
#    needs: build
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Download JAR artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: app-jar
#          path: deployment
#
#      - name: Upload JAR to repository
#        run: |
#          scp deployment/*.jar user@server:/path/to/deployment/folder
#          ssh user@server "bash -c 'cd /path/to/deployment/folder && ./restart-application.sh'"
