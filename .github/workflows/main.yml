name: Build and Deploy Maven Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyze-code:
    name: Analyze Code Style
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run static code analysis
        run: mvn checkstyle:check

  build:
    name: Build JAR
    runs-on: ubuntu-latest
    needs: analyze-code

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/*.jar

  publish-artifact:
    name: Publish JAR to GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: .

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: 'v1.0.0'
          release_name: 'Release v1.0.0'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/*.jar
          asset_name: app.jar
          asset_content_type: application/java-archive